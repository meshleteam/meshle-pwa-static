"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[816],{2816:function(e,t,r){r.r(t),r.d(t,{SetupWorkerApi:function(){return O},setupWorker:function(){return setupWorker}});var s=r(912),n=r(9336),until=async e=>{try{let t=await e().catch(e=>{throw e});return{error:null,data:t}}catch(e){return{error:e,data:null}}};let executeHandlers=async({request:e,requestId:t,handlers:r,resolutionContext:s})=>{let n=null,i=null;for(let o of r)if(null!==(i=await o.run({request:e,requestId:t,resolutionContext:s}))&&(n=o),i?.response)break;return n?{handler:n,parsedResult:i?.parsedResult,response:i?.response}:null};var i=r(786);async function onUnhandledRequest(e,t="warn"){let r=new URL(e.url),n=(0,i.F)(r)+r.search,o=`intercepted a request without a matching request handler:

  \u2022 ${e.method} ${n}

If you still wish to intercept this unhandled request, please create a request handler for it.
Read more: https://mswjs.io/docs/getting-started/mocks`;function applyStrategy(e){switch(e){case"error":throw s.e.error("Error: %s",o),new s.A(s.e.formatMessage('Cannot bypass a request when using the "error" strategy for the "onUnhandledRequest" option.'));case"warn":s.e.warn("Warning: %s",o);break;case"bypass":break;default:throw new s.A(s.e.formatMessage('Failed to react to an unhandled request: unknown strategy "%s". Please provide one of the supported strategies ("bypass", "warn", "error") or a custom callback function as the value of the "onUnhandledRequest" option.',e))}}if("function"==typeof t){t(e,{warning:applyStrategy.bind(null,"warn"),error:applyStrategy.bind(null,"error")});return}"file:"!==r.protocol&&applyStrategy(t)}var o=r(6700);async function handleRequest(e,t,r,s,n,i){if(n.emit("request:start",{request:e,requestId:t}),"bypass"===e.headers.get("x-msw-intention")){n.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}let a=await until(()=>executeHandlers({request:e,requestId:t,handlers:r,resolutionContext:i?.resolutionContext}));if(a.error)throw n.emit("unhandledException",{error:a.error,request:e,requestId:t}),a.error;if(!a.data){await onUnhandledRequest(e,s.onUnhandledRequest),n.emit("request:unhandled",{request:e,requestId:t}),n.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}let{response:l}=a.data;if(!l||302===l.status&&"passthrough"===l.headers.get("x-msw-intention")){n.emit("request:end",{request:e,requestId:t}),i?.onPassthroughResponse?.(e);return}o.h.add({...e,url:e.url.toString()},l),o.h.persist(),n.emit("request:match",{request:e,requestId:t});let u=a.data,c=i?.transformResponse?.(l)||l;return i?.onMockedResponse?.(c,u),n.emit("request:end",{request:e,requestId:t}),c}var a=r(5002),l=r(6726);let Disposable=class Disposable{subscriptions=[];dispose(){let e;for(;e=this.subscriptions.shift();)e()}};let InMemoryHandlersController=class InMemoryHandlersController{constructor(e){this.initialHandlers=e,this.handlers=[...e]}handlers;prepend(e){this.handlers.unshift(...e)}reset(e){this.handlers=e.length>0?[...e]:[...this.initialHandlers]}currentHandlers(){return this.handlers}};let SetupApi=class SetupApi extends Disposable{handlersController;emitter;publicEmitter;events;constructor(...e){super(),(0,a.kG)(this.validateHandlers(e),s.e.formatMessage("Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?")),this.handlersController=new InMemoryHandlersController(e),this.emitter=new l.Q,this.publicEmitter=new l.Q,function(e,t){let r=e.emit;if(r._isPiped)return;let sourceEmit=function(e,...s){return t.emit(e,...s),r.call(this,e,...s)};sourceEmit._isPiped=!0,e.emit=sourceEmit}(this.emitter,this.publicEmitter),this.events=this.createLifeCycleEvents(),this.subscriptions.push(()=>{this.emitter.removeAllListeners(),this.publicEmitter.removeAllListeners()})}validateHandlers(e){return e.every(e=>!Array.isArray(e))}use(...e){(0,a.kG)(this.validateHandlers(e),s.e.formatMessage('Failed to call "use()" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?')),this.handlersController.prepend(e)}restoreHandlers(){this.handlersController.currentHandlers().forEach(e=>{e.isUsed=!1})}resetHandlers(...e){this.handlersController.reset(e)}listHandlers(){return function(e){let t=[...e];return Object.freeze(t),t}(this.handlersController.currentHandlers())}createLifeCycleEvents(){return{on:(...e)=>this.publicEmitter.on(...e),removeListener:(...e)=>this.publicEmitter.removeListener(...e),removeAllListeners:(...e)=>this.publicEmitter.removeAllListeners(...e)}}};function isObject(e){return null!=e&&"object"==typeof e&&!Array.isArray(e)}var u=r(3454),c=/(%?)(%([sdijo]))/g;function format(e,...t){if(0===t.length)return e;let r=0,s=e.replace(c,(e,s,n,i)=>{let o=t[r],a=function(e,t){switch(t){case"s":return e;case"d":case"i":return Number(e);case"j":return JSON.stringify(e);case"o":{if("string"==typeof e)return e;let t=JSON.stringify(e);if("{}"===t||"[]"===t||/^\[object .+?\]$/.test(t))return e;return t}}}(o,i);return s?e:(r++,a)});return r<t.length&&(s+=` ${t.slice(r).join(" ")}`),s=s.replace(/%{2,2}/g,"%")}var h=class extends Error{constructor(e,...t){super(e),this.message=e,this.name="Invariant Violation",this.message=format(e,...t),function(e){if(!e.stack)return;let t=e.stack.split("\n");t.splice(1,2),e.stack=t.join("\n")}(this)}},invariant=(e,t,...r)=>{if(!e)throw new h(t,...r)};function isNodeProcess(){if("undefined"!=typeof navigator&&"ReactNative"===navigator.product)return!0;if(void 0!==u){let e=u.type;return"renderer"!==e&&"worker"!==e&&!!(u.versions&&u.versions.node)}return!1}invariant.as=(e,t,r,...s)=>{if(!t){let t;let n=0===s.length?r:format(r,s);try{t=Reflect.construct(e,[n])}catch(r){t=e(n)}throw t}};var browser_until=async e=>{try{let t=await e().catch(e=>{throw e});return{error:null,data:t}}catch(e){return{error:e,data:null}}};function getWorkerByRegistration(e,t,r){let s=[e.active,e.installing,e.waiting],n=s.filter(e=>null!=e),i=n.find(e=>r(e.scriptURL,t));return i||null}var getWorkerInstance=async(e,t={},r)=>{let n=new URL(e,location.href).href,i=await navigator.serviceWorker.getRegistrations().then(e=>e.filter(e=>getWorkerByRegistration(e,n,r)));!navigator.serviceWorker.controller&&i.length>0&&location.reload();let[o]=i;if(o)return o.update().then(()=>[getWorkerByRegistration(o,n,r),o]);let a=await browser_until(async()=>{let s=await navigator.serviceWorker.register(e,t);return[getWorkerByRegistration(s,n,r),s]});if(a.error){let e=a.error.message.includes("(404)");if(e){let e=new URL(t?.scope||"/",location.href);throw Error(s.e.formatMessage(`Failed to register a Service Worker for scope ('${e.href}') with script ('${n}'): Service Worker script does not exist at the given path.

Did you forget to run "npx msw init <PUBLIC_DIR>"?

Learn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`))}throw Error(s.e.formatMessage("Failed to register the Service Worker:\n\n%s",a.error.message))}return a.data};function printStartMessage(e={}){if(e.quiet)return;let t=e.message||"Mocking enabled.";console.groupCollapsed(`%c${s.e.formatMessage(t)}`,"color:orangered;font-weight:bold;"),console.log("%cDocumentation: %chttps://mswjs.io/docs","font-weight:bold","font-weight:normal"),console.log("Found an issue? https://github.com/mswjs/msw/issues"),e.workerUrl&&console.log("Worker script URL:",e.workerUrl),e.workerScope&&console.log("Worker scope:",e.workerScope),console.groupEnd()}async function enableMocking(e,t){if(e.workerChannel.send("MOCK_ACTIVATE"),await e.events.once("MOCKING_ENABLED"),e.isMockingEnabled){s.e.warn('Found a redundant "worker.start()" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this "worker.start()" call.');return}e.isMockingEnabled=!0,printStartMessage({quiet:t.quiet,workerScope:e.registration?.scope,workerUrl:e.worker?.scriptURL})}var d=class{constructor(e){this.port=e}postMessage(e,...t){let[r,s]=t;this.port.postMessage({type:e,data:r},{transfer:s})}},createRequestListener=(e,t)=>async(r,i)=>{var o;let a=new d(r.ports[0]),l=i.payload.id,u=(o=i.payload,new Request(o.url,{...o,body:function(e){if(!["HEAD","GET"].includes(e.method))return e.body}(o)})),c=u.clone(),h=u.clone();n.Z.cache.set(u,h),e.requests.set(l,h);try{await handleRequest(u,l,e.getRequestHandlers(),t,e.emitter,{onPassthroughResponse(){a.postMessage("PASSTHROUGH")},async onMockedResponse(r,{handler:s,parsedResult:n}){let i=r.clone(),o=r.clone(),l={status:r.status,statusText:r.statusText,headers:Object.fromEntries(r.headers.entries())};if(e.supports.readableStreamTransfer){let e=r.body;a.postMessage("MOCK_RESPONSE",{...l,body:e},e?[e]:void 0)}else{let e=null===r.body?null:await i.arrayBuffer();a.postMessage("MOCK_RESPONSE",{...l,body:e})}t.quiet||e.emitter.once("response:mocked",()=>{s.log({request:c,response:o,parsedResult:n})})}})}catch(e){e instanceof Error&&(s.e.error(`Uncaught exception in the request handler for "%s %s":

%s

This exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,u.method,u.url,e.stack??e),a.postMessage("MOCK_RESPONSE",{status:500,statusText:"Request Handler Error",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e.name,message:e.message,stack:e.stack})}))}};async function checkWorkerIntegrity(e){e.workerChannel.send("INTEGRITY_CHECK_REQUEST");let{payload:t}=await e.events.once("INTEGRITY_CHECK_RESPONSE");"26357c79639bfa20d64c0efca2a87423"!==t.checksum&&s.e.warn(`The currently registered Service Worker has been generated by a different version of MSW (${t.packageVersion}) and may not be fully compatible with the installed version.

It's recommended you update your worker script by running this command:

  \u2022 npx msw init <PUBLIC_DIR>

You can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`)}var p=new TextEncoder,g=Symbol("isPatchedModule"),f=new Set([101,103,204,205,304]);function createServerErrorResponse(e){return new Response(JSON.stringify(e instanceof Error?{name:e.name,message:e.message,stack:e.stack}:e),{status:500,statusText:"Unhandled Exception",headers:{"Content-Type":"application/json"}})}function isResponseError(e){return function(e,t){try{return e[t],!0}catch(e){return!1}}(e,"type")&&"error"===e.type}var m=Object.defineProperty,y={};function yellow(e){return`\x1b[33m${e}\x1b[0m`}function blue(e){return`\x1b[34m${e}\x1b[0m`}function gray(e){return`\x1b[90m${e}\x1b[0m`}function red(e){return`\x1b[31m${e}\x1b[0m`}function green(e){return`\x1b[32m${e}\x1b[0m`}((e,t)=>{for(var r in t)m(e,r,{get:t[r],enumerable:!0})})(y,{blue:()=>blue,gray:()=>gray,green:()=>green,red:()=>red,yellow:()=>yellow});var v=isNodeProcess(),b=class{constructor(e){this.name=e,this.prefix=`[${this.name}]`;let t=getVariable("DEBUG"),r=getVariable("LOG_LEVEL"),s="1"===t||"true"===t||void 0!==t&&this.name.startsWith(t);s?(this.debug=isDefinedAndNotEquals(r,"debug")?noop:this.debug,this.info=isDefinedAndNotEquals(r,"info")?noop:this.info,this.success=isDefinedAndNotEquals(r,"success")?noop:this.success,this.warning=isDefinedAndNotEquals(r,"warning")?noop:this.warning,this.error=isDefinedAndNotEquals(r,"error")?noop:this.error):(this.info=noop,this.success=noop,this.warning=noop,this.error=noop,this.only=noop)}prefix;extend(e){return new b(`${this.name}:${e}`)}debug(e,...t){this.logEntry({level:"debug",message:gray(e),positionals:t,prefix:this.prefix,colors:{prefix:"gray"}})}info(e,...t){this.logEntry({level:"info",message:e,positionals:t,prefix:this.prefix,colors:{prefix:"blue"}});let r=new w;return(e,...t)=>{r.measure(),this.logEntry({level:"info",message:`${e} ${gray(`${r.deltaTime}ms`)}`,positionals:t,prefix:this.prefix,colors:{prefix:"blue"}})}}success(e,...t){this.logEntry({level:"info",message:e,positionals:t,prefix:`\u2714 ${this.prefix}`,colors:{timestamp:"green",prefix:"green"}})}warning(e,...t){this.logEntry({level:"warning",message:e,positionals:t,prefix:`\u26A0 ${this.prefix}`,colors:{timestamp:"yellow",prefix:"yellow"}})}error(e,...t){this.logEntry({level:"error",message:e,positionals:t,prefix:`\u2716 ${this.prefix}`,colors:{timestamp:"red",prefix:"red"}})}only(e){e()}createEntry(e,t){return{timestamp:new Date,level:e,message:t}}logEntry(e){let{level:t,message:r,prefix:s,colors:n,positionals:i=[]}=e,o=this.createEntry(t,r),a=n?.timestamp||"gray",l=n?.prefix||"gray",u={timestamp:y[a],prefix:y[l]},c=this.getWriter(t);c([u.timestamp(this.formatTimestamp(o.timestamp))].concat(null!=s?u.prefix(s):[]).concat(serializeInput(r)).join(" "),...i.map(serializeInput))}formatTimestamp(e){return`${e.toLocaleTimeString("en-GB")}:${e.getMilliseconds()}`}getWriter(e){switch(e){case"debug":case"success":case"info":return log;case"warning":return warn;case"error":return error}}},w=class{startTime;endTime;deltaTime;constructor(){this.startTime=performance.now()}measure(){this.endTime=performance.now();let e=this.endTime-this.startTime;this.deltaTime=e.toFixed(2)}},noop=()=>void 0;function log(e,...t){if(v){u.stdout.write(format(e,...t)+"\n");return}console.log(e,...t)}function warn(e,...t){if(v){u.stderr.write(format(e,...t)+"\n");return}console.warn(e,...t)}function error(e,...t){if(v){u.stderr.write(format(e,...t)+"\n");return}console.error(e,...t)}function getVariable(e){return v?u.env[e]:globalThis[e]?.toString()}function isDefinedAndNotEquals(e,t){return void 0!==e&&e!==t}function serializeInput(e){return void 0===e?"undefined":null===e?"null":"string"==typeof e?e:"object"==typeof e?JSON.stringify(e):e.toString()}var q=class extends Error{constructor(e,t,r){super(`Possible EventEmitter memory leak detected. ${r} ${t.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`),this.emitter=e,this.type=t,this.count=r,this.name="MaxListenersExceededWarning"}},k=class{static listenerCount(e,t){return e.listenerCount(t)}constructor(){this.events=new Map,this.maxListeners=k.defaultMaxListeners,this.hasWarnedAboutPotentialMemoryLeak=!1}_emitInternalEvent(e,t,r){this.emit(e,...[t,r])}_getListeners(e){return Array.prototype.concat.apply([],this.events.get(e))||[]}_removeListener(e,t){let r=e.indexOf(t);return r>-1&&e.splice(r,1),[]}_wrapOnceListener(e,t){let onceListener=(...r)=>(this.removeListener(e,onceListener),t.apply(this,r));return Object.defineProperty(onceListener,"name",{value:t.name}),onceListener}setMaxListeners(e){return this.maxListeners=e,this}getMaxListeners(){return this.maxListeners}eventNames(){return Array.from(this.events.keys())}emit(e,...t){let r=this._getListeners(e);return r.forEach(e=>{e.apply(this,t)}),r.length>0}addListener(e,t){this._emitInternalEvent("newListener",e,t);let r=this._getListeners(e).concat(t);if(this.events.set(e,r),this.maxListeners>0&&this.listenerCount(e)>this.maxListeners&&!this.hasWarnedAboutPotentialMemoryLeak){this.hasWarnedAboutPotentialMemoryLeak=!0;let t=new q(this,e,this.listenerCount(e));console.warn(t)}return this}on(e,t){return this.addListener(e,t)}once(e,t){return this.addListener(e,this._wrapOnceListener(e,t))}prependListener(e,t){let r=this._getListeners(e);if(r.length>0){let s=[t].concat(r);this.events.set(e,s)}else this.events.set(e,r.concat(t));return this}prependOnceListener(e,t){return this.prependListener(e,this._wrapOnceListener(e,t))}removeListener(e,t){let r=this._getListeners(e);return r.length>0&&(this._removeListener(r,t),this.events.set(e,r),this._emitInternalEvent("removeListener",e,t)),this}off(e,t){return this.removeListener(e,t)}removeAllListeners(e){return e?this.events.delete(e):this.events.clear(),this}listeners(e){return Array.from(this._getListeners(e))}listenerCount(e){return this._getListeners(e).length}rawListeners(e){return this.listeners(e)}};function getGlobalSymbol(e){return globalThis[e]||void 0}k.defaultMaxListeners=10;var R=class{constructor(e){this.symbol=e,this.readyState="INACTIVE",this.emitter=new k,this.subscriptions=[],this.logger=new b(e.description),this.emitter.setMaxListeners(0),this.logger.info("constructing the interceptor...")}checkEnvironment(){return!0}apply(){let e=this.logger.extend("apply");if(e.info("applying the interceptor..."),"APPLIED"===this.readyState){e.info("intercepted already applied!");return}let t=this.checkEnvironment();if(!t){e.info("the interceptor cannot be applied in this environment!");return}this.readyState="APPLYING";let r=this.getInstance();if(r){e.info("found a running instance, reusing..."),this.on=(t,s)=>(e.info('proxying the "%s" listener',t),r.emitter.addListener(t,s),this.subscriptions.push(()=>{r.emitter.removeListener(t,s),e.info('removed proxied "%s" listener!',t)}),this),this.readyState="APPLIED";return}e.info("no running instance found, setting up a new instance..."),this.setup(),this.setInstance(),this.readyState="APPLIED"}setup(){}on(e,t){let r=this.logger.extend("on");return"DISPOSING"===this.readyState||"DISPOSED"===this.readyState?r.info("cannot listen to events, already disposed!"):(r.info('adding "%s" event listener:',e,t),this.emitter.on(e,t)),this}once(e,t){return this.emitter.once(e,t),this}off(e,t){return this.emitter.off(e,t),this}removeAllListeners(e){return this.emitter.removeAllListeners(e),this}dispose(){let e=this.logger.extend("dispose");if("DISPOSED"===this.readyState){e.info("cannot dispose, already disposed!");return}if(e.info("disposing the interceptor..."),this.readyState="DISPOSING",!this.getInstance()){e.info("no interceptors running, skipping dispose...");return}if(this.clearInstance(),e.info("global symbol deleted:",getGlobalSymbol(this.symbol)),this.subscriptions.length>0){for(let t of(e.info("disposing of %d subscriptions...",this.subscriptions.length),this.subscriptions))t();this.subscriptions=[],e.info("disposed of all subscriptions!",this.subscriptions.length)}this.emitter.removeAllListeners(),e.info("destroyed the listener!"),this.readyState="DISPOSED"}getInstance(){var e;let t=getGlobalSymbol(this.symbol);return this.logger.info("retrieved global instance:",null==(e=null==t?void 0:t.constructor)?void 0:e.name),t}setInstance(){var e;e=this.symbol,globalThis[e]=this,this.logger.info("set global instance!",this.symbol.description)}clearInstance(){var e;e=this.symbol,delete globalThis[e],this.logger.info("cleared global instance!",this.symbol.description)}};function createRequestId(){return Math.random().toString(16).slice(2)}var E=class extends R{constructor(e){E.symbol=Symbol(e.name),super(E.symbol),this.interceptors=e.interceptors}setup(){let e=this.logger.extend("setup");for(let t of(e.info("applying all %d interceptors...",this.interceptors.length),this.interceptors))e.info('applying "%s" interceptor...',t.constructor.name),t.apply(),e.info("adding interceptor dispose subscription"),this.subscriptions.push(()=>t.dispose())}on(e,t){for(let r of this.interceptors)r.on(e,t);return this}once(e,t){for(let r of this.interceptors)r.once(e,t);return this}off(e,t){for(let r of this.interceptors)r.off(e,t);return this}removeAllListeners(e){for(let t of this.interceptors)t.removeAllListeners(e);return this}},createStartHandler=e=>function(t,r){let startWorkerInstance=async()=>{var n;e.events.removeAllListeners(),e.workerChannel.on("REQUEST",createRequestListener(e,t)),e.workerChannel.on("RESPONSE",(t,r)=>{var s;let{payload:n}=r,{requestId:i}=n,o=e.requests.get(i);if(e.requests.delete(i),n.type?.includes("opaque"))return;let a=0===n.status?Response.error():new Response((s=n.status,f.has(s))?null:n.body,n);a.url||Object.defineProperty(a,"url",{value:o.url,enumerable:!0,writable:!1}),e.emitter.emit(n.isMockedResponse?"response:mocked":"response:bypass",{response:a,request:o,requestId:n.requestId})});let i=await getWorkerInstance(t.serviceWorker.url,t.serviceWorker.options,t.findWorker),[o,a]=i;if(!o){let e=r?.findWorker?s.e.formatMessage(`Failed to locate the Service Worker registration using a custom "findWorker" predicate.

Please ensure that the custom predicate properly locates the Service Worker registration at "%s".
More details: https://mswjs.io/docs/api/setup-worker/start#findworker
`,t.serviceWorker.url):s.e.formatMessage(`Failed to locate the Service Worker registration.

This most likely means that the worker script URL "%s" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.

Please consider using a custom "serviceWorker.url" option to point to the actual worker script location, or a custom "findWorker" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,t.serviceWorker.url,location.host);throw Error(e)}return e.worker=o,e.registration=a,e.events.addListener(window,"beforeunload",()=>{"redundant"!==o.state&&e.workerChannel.send("CLIENT_CLOSED"),window.clearInterval(e.keepAliveInterval)}),await checkWorkerIntegrity(e).catch(e=>{s.e.error("Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below."),console.error(e)}),e.keepAliveInterval=window.setInterval(()=>e.workerChannel.send("KEEPALIVE_REQUEST"),5e3),n=e.startOptions,n?.quiet||location.href.startsWith(a.scope)||s.e.warn(`Cannot intercept requests on this page because it's outside of the worker's scope ("${a.scope}"). If you wish to mock API requests on this page, you must resolve this scope issue.

- (Recommended) Register the worker at the root level ("/") of your application.
- Set the "Service-Worker-Allowed" response header to allow out-of-scope workers.`),a},n=startWorkerInstance().then(async r=>{let s=r.installing||r.waiting;return s&&await new Promise(e=>{s.addEventListener("statechange",()=>{if("activated"===s.state)return e()})}),await enableMocking(e,t).catch(e=>{throw Error(`Failed to enable mocking: ${e?.message}`)}),r});return n};function printStopMessage(e={}){e.quiet||console.log(`%c${s.e.formatMessage("Mocking disabled.")}`,"color:orangered;font-weight:bold;")}var createStop=e=>function(){if(!e.isMockingEnabled){s.e.warn('Found a redundant "worker.stop()" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this "worker.stop()" call.');return}e.workerChannel.send("MOCK_DEACTIVATE"),e.isMockingEnabled=!1,window.clearInterval(e.keepAliveInterval),printStopMessage({quiet:e.startOptions?.quiet})},x={serviceWorker:{url:"/mockServiceWorker.js",options:null},quiet:!1,waitUntilReady:!0,onUnhandledRequest:"warn",findWorker:(e,t)=>e===t},L=class extends Promise{#e;resolve;reject;constructor(e=null){let t=function(){let executor=(e,t)=>{executor.state="pending",executor.resolve=t=>"pending"!==executor.state?void 0:(executor.result=t,e(t instanceof Promise?t:Promise.resolve(t).then(e=>(executor.state="fulfilled",e)))),executor.reject=e=>{if("pending"===executor.state)return queueMicrotask(()=>{executor.state="rejected"}),t(executor.rejectionReason=e)}};return executor}();super((r,s)=>{t(r,s),e?.(t.resolve,t.reject)}),this.#e=t,this.resolve=this.#e.resolve,this.reject=this.#e.reject}get state(){return this.#e.state}get rejectionReason(){return this.#e.rejectionReason}then(e,t){return this.#t(super.then(e,t))}catch(e){return this.#t(super.catch(e))}finally(e){return this.#t(super.finally(e))}#t(e){return Object.defineProperties(e,{resolve:{configurable:!0,value:this.resolve},reject:{configurable:!0,value:this.reject}})}},S=class{constructor(e){this.request=e,this.responsePromise=new L}respondWith(e){invariant("pending"===this.responsePromise.state,'Failed to respond to "%s %s" request: the "request" event has already been responded to.',this.request.method,this.request.url),this.responsePromise.resolve(e)}};function toInteractiveRequest(e){let t=new S(e);return Reflect.set(e,"respondWith",t.respondWith.bind(t)),{interactiveRequest:e,requestController:t}}async function emitAsync(e,t,...r){let s=e.listeners(t);if(0!==s.length)for(let t of s)await t.apply(e,r)}var T=class extends R{constructor(){super(T.symbol)}checkEnvironment(){return"undefined"!=typeof globalThis&&void 0!==globalThis.fetch}async setup(){let e=globalThis.fetch;invariant(!e[g],'Failed to patch the "fetch" module: already patched.'),globalThis.fetch=async(t,r)=>{var s;let n=createRequestId(),i="string"!=typeof t||"undefined"==typeof location||function(e){try{return new URL(e),!0}catch(e){return!1}}(t)?t:new URL(t,location.origin),o=new Request(i,r);this.logger.info("[%s] %s",o.method,o.url);let{interactiveRequest:a,requestController:l}=toInteractiveRequest(o);this.logger.info('emitting the "request" event for %d listener(s)...',this.emitter.listenerCount("request")),this.emitter.once("request",({requestId:e})=>{e===n&&"pending"===l.responsePromise.state&&l.responsePromise.resolve(void 0)}),this.logger.info("awaiting for the mocked response...");let u=a.signal,c=new L;u&&u.addEventListener("abort",()=>{c.reject(u.reason)},{once:!0});let h=new L,respondWith=e=>{if(this.logger.info("responding with a mock response:",e),this.emitter.listenerCount("response")>0){this.logger.info('emitting the "response" event...');let t=e.clone();this.emitter.emit("response",{response:t,isMockedResponse:!0,request:a,requestId:n})}Object.defineProperty(e,"url",{writable:!1,enumerable:!0,configurable:!1,value:o.url}),h.resolve(e)},errorWith=e=>{h.reject(e)},d=await browser_until(async()=>{let e=emitAsync(this.emitter,"request",{request:a,requestId:n});await Promise.race([c,e,l.responsePromise]),this.logger.info("all request listeners have been resolved!");let t=await l.responsePromise;return this.logger.info("event.respondWith called with:",t),t});if("rejected"===c.state)return this.logger.info("request has been aborted:",c.rejectionReason),h.reject(c.rejectionReason),h;if(d.error)return this.logger.info("request listerner threw an error:",d.error),d.error instanceof Response&&(isResponseError(d.error)?errorWith(createNetworkError(d.error)):respondWith(d.error)),this.emitter.listenerCount("unhandledException")>0&&(await emitAsync(this.emitter,"unhandledException",{error:d.error,request:o,requestId:n,controller:{respondWith,errorWith}}),"pending"!==h.state)||respondWith(createServerErrorResponse(d.error)),h;let p=d.data;return!p||(null==(s=o.signal)?void 0:s.aborted)?(this.logger.info("no mocked response received!"),e(o).then(e=>{if(this.logger.info("original fetch performed",e),this.emitter.listenerCount("response")>0){this.logger.info('emitting the "response" event...');let t=e.clone();this.emitter.emit("response",{response:t,isMockedResponse:!1,request:a,requestId:n})}return e})):(this.logger.info("received mocked response:",p),isResponseError(p)?(this.logger.info("received a network error response, rejecting the request promise..."),errorWith(createNetworkError(p))):respondWith(p),h)},Object.defineProperty(globalThis.fetch,g,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(()=>{Object.defineProperty(globalThis.fetch,g,{value:void 0}),globalThis.fetch=e,this.logger.info('restored native "globalThis.fetch"!',globalThis.fetch.name)})}};function createNetworkError(e){return Object.assign(TypeError("Failed to fetch"),{cause:e})}T.symbol=Symbol("fetch");var P=class{constructor(e,t){this.AT_TARGET=0,this.BUBBLING_PHASE=0,this.CAPTURING_PHASE=0,this.NONE=0,this.type="",this.srcElement=null,this.currentTarget=null,this.eventPhase=0,this.isTrusted=!0,this.composed=!1,this.cancelable=!0,this.defaultPrevented=!1,this.bubbles=!0,this.lengthComputable=!0,this.loaded=0,this.total=0,this.cancelBubble=!1,this.returnValue=!0,this.type=e,this.target=(null==t?void 0:t.target)||null,this.currentTarget=(null==t?void 0:t.currentTarget)||null,this.timeStamp=Date.now()}composedPath(){return[]}initEvent(e,t,r){this.type=e,this.bubbles=!!t,this.cancelable=!!r}preventDefault(){this.defaultPrevented=!0}stopPropagation(){}stopImmediatePropagation(){}},M=class extends P{constructor(e,t){super(e),this.lengthComputable=(null==t?void 0:t.lengthComputable)||!1,this.composed=(null==t?void 0:t.composed)||!1,this.loaded=(null==t?void 0:t.loaded)||0,this.total=(null==t?void 0:t.total)||0}},A="undefined"!=typeof ProgressEvent;function createProxy(e,t){let r=new Proxy(e,function(e){let{constructorCall:t,methodCall:r,getProperty:s,setProperty:n}=e,i={};return void 0!==t&&(i.construct=function(e,r,s){let n=Reflect.construct.bind(null,e,r,s);return t.call(s,r,n)}),i.set=function(e,t,r){let next=()=>{let s=function findPropertySource(e,t){if(!(t in e))return null;let r=Object.prototype.hasOwnProperty.call(e,t);if(r)return e;let s=Reflect.getPrototypeOf(e);return s?findPropertySource(s,t):null}(e,t)||e,n=Reflect.getOwnPropertyDescriptor(s,t);return void 0!==(null==n?void 0:n.set)?(n.set.apply(e,[r]),!0):Reflect.defineProperty(s,t,{writable:!0,enumerable:!0,configurable:!0,value:r})};return void 0!==n?n.call(e,[t,r],next):next()},i.get=function(e,t,n){let next=()=>e[t],i=void 0!==s?s.call(e,[t,n],next):next();return"function"==typeof i?(...s)=>{let n=i.bind(e,...s);return void 0!==r?r.call(e,[t,s],n):n()}:i},i}(t));return r}var I=Symbol("isMockedResponse"),W=isNodeProcess(),C=class{constructor(e,t){this.initialRequest=e,this.logger=t,this.method="GET",this.url=null,this.events=new Map,this.requestId=createRequestId(),this.requestHeaders=new Headers,this.responseBuffer=new Uint8Array,this.request=createProxy(e,{setProperty:([e,t],r)=>{if("ontimeout"===e){let s=e.slice(2);return this.request.addEventListener(s,t),r()}return r()},methodCall:([e,t],r)=>{var s;switch(e){case"open":{let[e,s]=t;return void 0===s?(this.method="GET",this.url=toAbsoluteUrl(e)):(this.method=e,this.url=toAbsoluteUrl(s)),this.logger=this.logger.extend(`${this.method} ${this.url.href}`),this.logger.info("open",this.method,this.url.href),r()}case"addEventListener":{let[e,s]=t;return this.registerEvent(e,s),this.logger.info("addEventListener",e,s),r()}case"setRequestHeader":{let[e,s]=t;return this.requestHeaders.set(e,s),this.logger.info("setRequestHeader",e,s),r()}case"send":{let[e]=t;null!=e&&(this.requestBody="string"==typeof e?p.encode(e):e),this.request.addEventListener("load",()=>{if(void 0!==this.onResponse){let e=function(e,t){var r;let s=(r=e.status,f.has(r))?null:t;return new Response(s,{status:e.status,statusText:e.statusText,headers:function(e){let t=new Headers,r=e.split(/[\r\n]+/);for(let e of r){if(""===e.trim())continue;let[r,...s]=e.split(": "),n=s.join(": ");t.append(r,n)}return t}(e.getAllResponseHeaders())})}(this.request,this.request.response);this.onResponse.call(this,{response:e,isMockedResponse:I in this.request,request:n,requestId:this.requestId})}});let n=this.toFetchApiRequest(),i=(null==(s=this.onRequest)?void 0:s.call(this,{request:n,requestId:this.requestId}))||Promise.resolve();i.finally(()=>{if(this.request.readyState<this.request.LOADING)return this.logger.info("request callback settled but request has not been handled (readystate %d), performing as-is...",this.request.readyState),W&&this.request.setRequestHeader("x-interceptors-internal-request-id",this.requestId),r()});break}default:return r()}}})}registerEvent(e,t){let r=this.events.get(e)||[],s=r.concat(t);this.events.set(e,s),this.logger.info('registered event "%s"',e,t)}respondWith(e){this.logger.info("responding with a mocked response: %d %s",e.status,e.statusText),browser_define(this.request,I,!0),browser_define(this.request,"status",e.status),browser_define(this.request,"statusText",e.statusText),browser_define(this.request,"responseURL",this.url.href),this.request.getResponseHeader=new Proxy(this.request.getResponseHeader,{apply:(t,r,s)=>{if(this.logger.info("getResponseHeader",s[0]),this.request.readyState<this.request.HEADERS_RECEIVED)return this.logger.info("headers not received yet, returning null"),null;let n=e.headers.get(s[0]);return this.logger.info('resolved response header "%s" to',s[0],n),n}}),this.request.getAllResponseHeaders=new Proxy(this.request.getAllResponseHeaders,{apply:()=>{if(this.logger.info("getAllResponseHeaders"),this.request.readyState<this.request.HEADERS_RECEIVED)return this.logger.info("headers not received yet, returning empty string"),"";let t=Array.from(e.headers.entries()),r=t.map(([e,t])=>`${e}: ${t}`).join("\r\n");return this.logger.info("resolved all response headers to",r),r}}),Object.defineProperties(this.request,{response:{enumerable:!0,configurable:!1,get:()=>this.response},responseText:{enumerable:!0,configurable:!1,get:()=>this.responseText},responseXML:{enumerable:!0,configurable:!1,get:()=>this.responseXML}});let t=e.headers.has("Content-Length")?Number(e.headers.get("Content-Length")):void 0;this.logger.info("calculated response body length",t),this.trigger("loadstart",{loaded:0,total:t}),this.setReadyState(this.request.HEADERS_RECEIVED),this.setReadyState(this.request.LOADING);let finalizeResponse=()=>{this.logger.info("finalizing the mocked response..."),this.setReadyState(this.request.DONE),this.trigger("load",{loaded:this.responseBuffer.byteLength,total:t}),this.trigger("loadend",{loaded:this.responseBuffer.byteLength,total:t})};if(e.body){this.logger.info("mocked response has body, streaming...");let r=e.body.getReader(),readNextResponseBodyChunk=async()=>{let{value:e,done:s}=await r.read();if(s){this.logger.info("response body stream done!"),finalizeResponse();return}e&&(this.logger.info("read response body chunk:",e),this.responseBuffer=function(e,t){let r=new Uint8Array(e.byteLength+t.byteLength);return r.set(e,0),r.set(t,e.byteLength),r}(this.responseBuffer,e),this.trigger("progress",{loaded:this.responseBuffer.byteLength,total:t})),readNextResponseBodyChunk()};readNextResponseBodyChunk()}else finalizeResponse()}responseBufferToText(){return function(e,t){let r=new TextDecoder(void 0);return r.decode(e)}(this.responseBuffer)}get response(){if(this.logger.info("getResponse (responseType: %s)",this.request.responseType),this.request.readyState!==this.request.DONE)return null;switch(this.request.responseType){case"json":{let e=function(e){try{let t=JSON.parse(e);return t}catch(e){return null}}(this.responseBufferToText());return this.logger.info("resolved response JSON",e),e}case"arraybuffer":{var e;let t=(e=this.responseBuffer).buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return this.logger.info("resolved response ArrayBuffer",t),t}case"blob":{let e=this.request.getResponseHeader("Content-Type")||"text/plain",t=new Blob([this.responseBufferToText()],{type:e});return this.logger.info("resolved response Blob (mime type: %s)",t,e),t}default:{let e=this.responseBufferToText();return this.logger.info('resolving "%s" response type as text',this.request.responseType,e),e}}}get responseText(){if(invariant(""===this.request.responseType||"text"===this.request.responseType,"InvalidStateError: The object is in invalid state."),this.request.readyState!==this.request.LOADING&&this.request.readyState!==this.request.DONE)return"";let e=this.responseBufferToText();return this.logger.info('getResponseText: "%s"',e),e}get responseXML(){if(invariant(""===this.request.responseType||"document"===this.request.responseType,"InvalidStateError: The object is in invalid state."),this.request.readyState!==this.request.DONE)return null;let e=this.request.getResponseHeader("Content-Type")||"";return"undefined"==typeof DOMParser?(console.warn("Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly."),null):["application/xhtml+xml","application/xml","image/svg+xml","text/html","text/xml"].some(t=>e.startsWith(t))?new DOMParser().parseFromString(this.responseBufferToText(),e):null}errorWith(e){this.logger.info("responding with an error"),this.setReadyState(this.request.DONE),this.trigger("error"),this.trigger("loadend")}setReadyState(e){if(this.logger.info("setReadyState: %d -> %d",this.request.readyState,e),this.request.readyState===e){this.logger.info("ready state identical, skipping transition...");return}browser_define(this.request,"readyState",e),this.logger.info("set readyState to: %d",e),e!==this.request.UNSENT&&(this.logger.info('triggerring "readystatechange" event...'),this.trigger("readystatechange"))}trigger(e,t){let r=this.request[`on${e}`],s=function(e,t,r){let s=A?ProgressEvent:M,n=["error","progress","loadstart","loadend","load","timeout","abort"].includes(t)?new s(t,{lengthComputable:!0,loaded:(null==r?void 0:r.loaded)||0,total:(null==r?void 0:r.total)||0}):new P(t,{target:e,currentTarget:e});return n}(this.request,e,t);for(let[n,i]of(this.logger.info('trigger "%s"',e,t||""),"function"==typeof r&&(this.logger.info('found a direct "%s" callback, calling...',e),r.call(this.request,s)),this.events))n===e&&(this.logger.info('found %d listener(s) for "%s" event, calling...',i.length,e),i.forEach(e=>e.call(this.request,s)))}toFetchApiRequest(){this.logger.info("converting request to a Fetch API Request...");let e=new Request(this.url.href,{method:this.method,headers:this.requestHeaders,credentials:this.request.withCredentials?"include":"same-origin",body:["GET","HEAD"].includes(this.method)?null:this.requestBody}),t=createProxy(e.headers,{methodCall:([t,r],s)=>{switch(t){case"append":case"set":{let[e,t]=r;this.request.setRequestHeader(e,t);break}case"delete":{let[t]=r;console.warn(`XMLHttpRequest: Cannot remove a "${t}" header from the Fetch API representation of the "${e.method} ${e.url}" request. XMLHttpRequest headers cannot be removed.`)}}return s()}});return browser_define(e,"headers",t),this.logger.info("converted request to a Fetch API Request!",e),e}};function toAbsoluteUrl(e){return"undefined"==typeof location?new URL(e):new URL(e.toString(),location.href)}function browser_define(e,t,r){Reflect.defineProperty(e,t,{writable:!0,enumerable:!0,value:r})}var H=class extends R{constructor(){super(H.interceptorSymbol)}checkEnvironment(){return void 0!==globalThis.XMLHttpRequest}setup(){let e=this.logger.extend("setup");e.info('patching "XMLHttpRequest" module...');let t=globalThis.XMLHttpRequest;invariant(!t[g],'Failed to patch the "XMLHttpRequest" module: already patched.'),globalThis.XMLHttpRequest=function({emitter:e,logger:t}){let r=new Proxy(globalThis.XMLHttpRequest,{construct(r,s,n){t.info("constructed new XMLHttpRequest");let i=Reflect.construct(r,s,n),o=Object.getOwnPropertyDescriptors(r.prototype);for(let e in o)Reflect.defineProperty(i,e,o[e]);let a=new C(i,t);return a.onRequest=async function({request:t,requestId:r}){let{interactiveRequest:s,requestController:n}=toInteractiveRequest(t);this.logger.info("awaiting mocked response..."),e.once("request",({requestId:e})=>{e===r&&"pending"===n.responsePromise.state&&n.respondWith(void 0)});let o=await browser_until(async()=>{this.logger.info('emitting the "request" event for %s listener(s)...',e.listenerCount("request")),await emitAsync(e,"request",{request:s,requestId:r}),this.logger.info('all "request" listeners settled!');let t=await n.responsePromise;return this.logger.info("event.respondWith called with:",t),t});if(o.error){if(this.logger.info("request listener threw an exception, aborting request...",o.error),o.error instanceof Response){isResponseError(o.error)?a.errorWith(TypeError("Network error")):this.respondWith(o.error);return}if(e.listenerCount("unhandledException")>0&&(await emitAsync(e,"unhandledException",{error:o.error,request:t,requestId:r,controller:{respondWith:a.respondWith.bind(a),errorWith:a.errorWith.bind(a)}}),i.readyState>XMLHttpRequest.OPENED))return;a.respondWith(createServerErrorResponse(o.error));return}let l=o.data;if(void 0!==l){if(this.logger.info("received mocked response: %d %s",l.status,l.statusText),isResponseError(l)){this.logger.info("received a network error response, rejecting the request promise..."),a.errorWith(TypeError("Network error"));return}return a.respondWith(l)}this.logger.info("no mocked response received, performing request as-is...")},a.onResponse=async function({response:t,isMockedResponse:r,request:s,requestId:n}){this.logger.info('emitting the "response" event for %s listener(s)...',e.listenerCount("response")),e.emit("response",{response:t,isMockedResponse:r,request:s,requestId:n})},a.request}});return r}({emitter:this.emitter,logger:this.logger}),e.info('native "XMLHttpRequest" module patched!',globalThis.XMLHttpRequest.name),Object.defineProperty(globalThis.XMLHttpRequest,g,{enumerable:!0,configurable:!0,value:!0}),this.subscriptions.push(()=>{Object.defineProperty(globalThis.XMLHttpRequest,g,{value:void 0}),globalThis.XMLHttpRequest=t,e.info('native "XMLHttpRequest" module restored!',globalThis.XMLHttpRequest.name)})}};H.interceptorSymbol=Symbol("xhr");var O=class extends SetupApi{context;startHandler=null;stopHandler=null;listeners;constructor(...e){super(...e),invariant(!isNodeProcess(),s.e.formatMessage("Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.")),this.listeners=[],this.context=this.createWorkerContext()}createWorkerContext(){let e={isMockingEnabled:!1,startOptions:null,worker:null,getRequestHandlers:()=>this.handlersController.currentHandlers(),registration:null,requests:new Map,emitter:this.emitter,workerChannel:{on:(e,t)=>{this.context.events.addListener(navigator.serviceWorker,"message",r=>{if(r.source!==this.context.worker)return;let s=r.data;s&&s.type===e&&t(r,s)})},send:e=>{this.context.worker?.postMessage(e)}},events:{addListener:(e,t,r)=>(e.addEventListener(t,r),this.listeners.push({eventType:t,target:e,callback:r}),()=>{e.removeEventListener(t,r)}),removeAllListeners:()=>{for(let{target:e,eventType:t,callback:r}of this.listeners)e.removeEventListener(t,r);this.listeners=[]},once:e=>{let t=[];return new Promise((r,s)=>{t.push(this.context.events.addListener(navigator.serviceWorker,"message",t=>{try{let s=t.data;s.type===e&&r(s)}catch(e){s(e)}}),this.context.events.addListener(navigator.serviceWorker,"messageerror",s))}).finally(()=>{t.forEach(e=>e())})}},supports:{serviceWorkerApi:!("serviceWorker"in navigator)||"file:"===location.protocol,readableStreamTransfer:function(){try{let e=new ReadableStream({start:e=>e.close()}),t=new MessageChannel;return t.port1.postMessage(e,[e]),!0}catch(e){return!1}}()}};return this.startHandler=e.supports.serviceWorkerApi?async function(t){e.fallbackInterceptor=function(e,t){let r=new E({name:"fallback",interceptors:[new T,new H]});return r.on("request",async({request:r,requestId:s})=>{let n=r.clone(),i=await handleRequest(r,s,e.getRequestHandlers(),t,e.emitter,{onMockedResponse(r,{handler:s,parsedResult:i}){t.quiet||e.emitter.once("response:mocked",({response:e})=>{s.log({request:n,response:e,parsedResult:i})})}});i&&r.respondWith(i)}),r.on("response",({response:t,isMockedResponse:r,request:s,requestId:n})=>{e.emitter.emit(r?"response:mocked":"response:bypass",{response:t,request:s,requestId:n})}),r.apply(),r}(e,t),printStartMessage({message:"Mocking enabled (fallback mode).",quiet:t.quiet})}:createStartHandler(e),this.stopHandler=e.supports.serviceWorkerApi?function(){e.fallbackInterceptor?.dispose(),printStopMessage({quiet:e.startOptions?.quiet})}:createStop(e),e}async start(e={}){return!0===e.waitUntilReady&&s.e.warn('The "waitUntilReady" option has been deprecated. Please remove it from this "worker.start()" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'),this.context.startOptions=function mergeRight(e,t){return Object.entries(t).reduce((e,[t,r])=>{let s=e[t];return Array.isArray(s)&&Array.isArray(r)?e[t]=s.concat(r):isObject(s)&&isObject(r)?e[t]=mergeRight(s,r):e[t]=r,e},Object.assign({},e))}(x,e),await this.startHandler(this.context.startOptions,e)}stop(){super.dispose(),this.context.events.removeAllListeners(),this.context.emitter.removeAllListeners(),this.stopHandler()}};function setupWorker(...e){return new O(...e)}}}]);